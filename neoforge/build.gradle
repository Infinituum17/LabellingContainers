plugins {
    id 'com.gradleup.shadow'
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common

    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
}

dependencies {
    neoForge "net.neoforged:neoforge:${rootProject.neoforge_version}"
    modImplementation "dev.architectury:architectury-neoforge:${rootProject.architectury_api_version}"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')

    // FastConfigAPI
    modApi("infinituum.fastconfigapi:fastconfigapi-neoforge:${rootProject.minecraft_version}-${rootProject.fastconfigapi_version}")
    forgeRuntimeLibrary 'com.moandjiezana.toml:toml4j:0.7.2'
    compileOnly 'com.moandjiezana.toml:toml4j:0.7.2'
    modApi("infinituum.void_lib:void_lib-neoforge:${rootProject.minecraft_version}-${rootProject.void_lib_version}")

    // Echo Chest mod
    // modCompileOnly "curse.maven:puzzles-lib-495476:5666187"
    // modCompileOnly "curse.maven:echo-chest-857972:5627764"

    // Nether Chested mod
    // modApi "fuzs.limitlesscontainers:limitlesscontainers-neoforge:21.0.0"
    // modCompileOnly "curse.maven:forge-config-api-port-fabric-547434:5605613"
    // modCompileOnly "curse.maven:new-nether-chest-857971:5627776"

    // Sophisticated Storage
    // modCompileOnly "curse.maven:sophisticated-storage-619320:5741329"

    // Colossal Chests
    // modCompileOnly "curse.maven:cyclops-core-232758:5583764"
    // modCompileOnly "curse.maven:colossal-chests-237875:5536699"
}

processResources {
    String version = rootProject.neoforge_version;
    var base_version = version.substring(0, version.lastIndexOf('.'))

    var rep_properties = [
            "version"                 : rootProject.version,
            "loader_version"          : rootProject.neoforge_loader_version,
            "neoforge_base_version"   : base_version,
            "minecraft_version"       : rootProject.minecraft_version,
            "architectury_api_version": rootProject.architectury_api_version,
            "fastconfigapi_version"   : rootProject.fastconfigapi_version
    ]

    inputs.properties rep_properties

    filesMatching("META-INF/neoforge.mods.toml") {
        expand rep_properties
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    inputFile.set shadowJar.archiveFile
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = rootProject.maven_group
            artifactId = rootProject.archives_base_name + "-" + project.name
            version = rootProject.minecraft_version + "-" + rootProject.mod_version

            from components.java
        }
    }

    repositories {}
}